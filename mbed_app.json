{
    "config": {

        "pir-pin": {
            "help": "Pin to which the PIR sensor is connected",
            "macro_name": "PIR_PIN",
            "value": "D2"
        },

        "led-type": {
            "help": "options are TRICOLOR_ANODE,TRICOLOR_CATHODE,GROVE_CHAINABLE",
            "value": "GROVE_CHAINABLE"
        },

        "led-pin-red": {
            "help": "Only used for TRICOLOR_* LED types",
            "value": "D5"
        },
        "led-pin-green": {
            "help": "Only used for TRICOLOR_* LED types",
            "value": "D6"
        },
        "led-pin-blue": {
            "help": "Only used for TRICOLOR_* LED types",
            "value": "D7"
        },

        "grove-clock-pin": {
            "help": "Only used for GROVE_CHAINABLE LED types",
            "value": "D5"
        },
        "grove-data-pin": {
            "help": "Only used for GROVE_CHAINABLE LED types",
            "value": "D6"
        },


        "network-interface":{
            "help": "options are ETHERNET, WIFI_ESP8266, WIFI_IDW0XX1, WIFI_ODIN, WIFI_RTW, WIFI_WIZFI310, WIFI_ISM43362, MESH_LOWPAN_ND, MESH_THREAD, CELLULAR_ONBOARD",
            "value": "WIFI_ISM43362"
        },
        "esp8266-tx": {
            "help": "Pin used as TX (connects to ESP8266 RX)",
            "value": "D1"
        },
        "esp8266-rx": {
            "help": "Pin used as RX (connects to ESP8266 TX)",
            "value": "D0"
        },
        "esp8266-debug": {
            "value": true
        },
        "wifi-ssid": {
            "value": "\"SSID\""
        },
        "wifi-password": {
            "value": "\"Password\""
        },
        "mesh_radio_type": {
            "help": "options are ATMEL, MCR20",
            "value": "ATMEL"
        },

        "endpoint-type": {
            "help": "mbed Cloud endpoint type (used to find this device back through the API)",
            "value": "\"light-system\""
        },

        "format-storage-layer-on-error": {
            "help": "Whether to format the storage layer when it cannot be read - always disable for production devices!",
            "value": 1
        },
        "developer-mode": {
            "help": "Enable Developer mode to skip Factory enrollment",
            "value": 1
        },

        "sotp-section-1-address": {
            "help": "Flash sector address for SOTP sector 1",
            "macro_name": "PAL_INTERNAL_FLASH_SECTION_1_ADDRESS",
            "value": null
        },
        "sotp-section-1-size": {
            "help": "Flash sector size for SOTP sector 1",
            "macro_name": "PAL_INTERNAL_FLASH_SECTION_1_SIZE",
            "value": null
        },
        "sotp-section-2-address": {
            "help": "Flash sector address for SOTP sector 2",
            "macro_name": "PAL_INTERNAL_FLASH_SECTION_2_ADDRESS",
            "value": null
        },
        "sotp-section-2-size": {
            "help": "Flash sector size for SOTP sector 2",
            "macro_name": "PAL_INTERNAL_FLASH_SECTION_2_SIZE",
            "value": null
        }
    },

    "macros": [
        "MBEDTLS_USER_CONFIG_FILE=\"mbedTLSConfig_mbedOS.h\"",
        "PAL_USER_DEFINED_CONFIGURATION=\"sotp_fs_config_MbedOS.h\"",
        "MBED_CLIENT_USER_CONFIG_FILE=\"mbed_cloud_client_user_config.h\"",
        "MBED_CLOUD_CLIENT_USER_CONFIG_FILE=\"mbed_cloud_client_user_config.h\"",
        "PAL_DTLS_PEER_MIN_TIMEOUT=5000",
        "MBED_CONF_APP_MAIN_STACK_SIZE=4608",
        "ARM_UC_USE_PAL_BLOCKDEVICE=1",
        "MBED_CLOUD_CLIENT_UPDATE_STORAGE=ARM_UCP_FLASHIAP_BLOCKDEVICE"
    ],

    "target_overrides": {
        "*": {
            "target.features_add": ["NANOSTACK", "LOWPAN_ROUTER", "COMMON_PAL"],
            "platform.stdio-baud-rate": 115200,
            "platform.stdio-convert-newlines": true,
            "mbed-client.event-loop-size": 1024,
            "nanostack-hal.event_loop_thread_stack_size": 8192,
            "storage-selector.storage": "SD_CARD",
            "storage-selector.filesystem": "FAT",
            "storage-selector.mount-point": "\"sd\"",
            "update-client.storage-address"  : "(1024*1024*64)",
            "update-client.storage-size"     : "(1024*1024*2)",
            "update-client.storage-locations": "1",
            "mbed-trace.enable": 0
        },
        "UBLOX_EVK_ODIN_W2": {
            "target.device_has_remove": ["EMAC"]
        }
    }
}
